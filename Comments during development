Ееее, я разобрался в хитросплетениях переменных окружения

Скрипт создает переменные окружения (среды?) BOT_NAME и BOT_TOKEN на сервере, точнее на ПК, где вы запускаете скрипт.
Далее скрипт запускает файл докер-компоуз, который строит образ по докер файлу, а  потом создает и запускает контейнер по полученному образу

Итак, в докерфайле мы тоже определили переменные, которые будет иметь образ. Роман их заполнил произвольными значениями, а также поместил их при запуске джарника

В момент запуска контейнера через докер компоуз мы их переопределяем - будут подставлены значения переменных, которые созданы скриптом
------------------------------------
Из этого следующие выводы
1) Переменные в скрипте должны стоять ПЕРЕД тем, как выполняется команда mvn package, иначе компоуз будет искать переменные, которых не существует
2) В принципе необязательно в докерфайле прописывать переменные - когда мы их прописываем в композе, они автоматически создадутся в контейнере ( либо они затрут значения по-умолчанию из докер файла)
3) Если мы удаляем их из докерфайла, то мы не сможем запустить джарник с ними - а оно нам и не надо! В файле application.properties можно написать
bot.username = ${BOT_NAME}
bot.token = ${BOT_TOKEN}
То есть значение bot.username будет браться из переменной окружения.  А переменную окружения в контейнере создал файл докер-компоуз, поместив туда значение переменной окружения, которую создал скрипт
4) Если мы в application.properties сделали такую подмену, то запуская приложение не из скрипта\докер композа, а просто из Интеледжи мы будем получать ошибку, потому что на нашем ПК переменных окружения BOT_NAME и BOT_TOKEN нет (хотя вроде мы же можем запустить скрипт start.sh, который должен их создать....но нет. Почему то они не появляются в списке системных переменных)
Значит нам надо самим 1 раз вручную создать эти системные переменные BOT_NAME и BOT_TOKEN и прописать там корректные значения (дело 2-х минут).

И всё, в гитхаб не будут попадать конфиденц. данные